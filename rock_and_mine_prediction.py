# -*- coding: utf-8 -*-
"""Rock and Mine Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1F_YUfRRv6m0oZpKCwagCaBpI4Yd44Agi
"""

import numpy as np

import pandas as pd

from sklearn.model_selection import train_test_split

from sklearn.metrics import accuracy_score

from sklearn.linear_model import LogisticRegression

M = pd.read_csv("Copy of sonar data.csv",header=None)

M.head()

M.shape

M.describe()

M[60].value_counts()

M.groupby(60).mean()

X=M.drop(columns=60,axis=1)
Y=M[60]

print(X)
print(Y)

X_train,X_test,Y_train,Y_test = train_test_split(X , Y, test_size=0.1,stratify=Y,random_state=1)

# for model training we use logistics model regression

model = LogisticRegression()

model.fit(X_train,Y_train)

print(model)

xtrain_prediction=model.predict(X_train)

acc=accuracy_score(xtrain_prediction,Y_train)

print("accuracyScore :",acc)

xtest_prediction=model.predict(X_test)
acc=accuracy_score(xtest_prediction,Y_test)
print("accuracyScore :",acc)

"""prediction system

"""

input_data=(0.0200,0.0371,0.0428,0.0207,0.0954,0.0986,0.1539,0.1601,0.3109,0.2111,0.1609,0.1582,0.2238,0.0645,0.0660,0.2273,0.3100,0.2999,0.5078,0.4797,0.5783,0.5071,0.4328,0.5550,0.6711,0.6415,0.7104,0.8080,0.6791,0.3857,0.1307,0.2604,0.5121,0.7547,0.8537,0.8507,0.6692,0.6097,0.4943,0.2744,0.0510,0.2834,0.2825,0.4256,0.2641,0.1386,0.1051,0.1343,0.0383,0.0324,0.0232,0.0027,0.0065,0.0159,0.0072,0.0167,0.0180,0.0084,0.0090,0.0032,)
numpyarr =np.asarray(input_data)
reshapeforonearr=numpyarr.reshape(1,-1)

prediction =model.predict(reshapeforonearr)
print(prediction)
if prediction[0]=='R':
   print("the object is rock")
else:
   print("the obj is mine")